syntax = "proto3";

package internetofsports.blockchain.identity;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "blockchain/identity/params.proto";
import "blockchain/identity/participant.proto";

option go_package = "github.com/InternetOfSports/blockchain/x/identity/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/InternetOfSports/blockchain/identity/params";
  
  }
  
  // Queries a list of Participant items.
  rpc Participant    (QueryGetParticipantRequest) returns (QueryGetParticipantResponse) {
    option (google.api.http).get = "/InternetOfSports/blockchain/identity/participant/{index}";
  
  }
  rpc ParticipantAll (QueryAllParticipantRequest) returns (QueryAllParticipantResponse) {
    option (google.api.http).get = "/InternetOfSports/blockchain/identity/participant";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetParticipantRequest {
  string index = 1;
}

message QueryGetParticipantResponse {
  Participant participant = 1 [(gogoproto.nullable) = false];
}

message QueryAllParticipantRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllParticipantResponse {
  repeated Participant                            participant = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination  = 2;
}

