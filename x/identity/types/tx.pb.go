// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: blockchain/identity/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgRegisterParticipant struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (m *MsgRegisterParticipant) Reset()         { *m = MsgRegisterParticipant{} }
func (m *MsgRegisterParticipant) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterParticipant) ProtoMessage()    {}
func (*MsgRegisterParticipant) Descriptor() ([]byte, []int) {
	return fileDescriptor_13deadb02d6524bf, []int{0}
}
func (m *MsgRegisterParticipant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterParticipant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterParticipant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterParticipant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterParticipant.Merge(m, src)
}
func (m *MsgRegisterParticipant) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterParticipant) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterParticipant.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterParticipant proto.InternalMessageInfo

func (m *MsgRegisterParticipant) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRegisterParticipant) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

type MsgRegisterParticipantResponse struct {
}

func (m *MsgRegisterParticipantResponse) Reset()         { *m = MsgRegisterParticipantResponse{} }
func (m *MsgRegisterParticipantResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterParticipantResponse) ProtoMessage()    {}
func (*MsgRegisterParticipantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13deadb02d6524bf, []int{1}
}
func (m *MsgRegisterParticipantResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterParticipantResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterParticipantResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterParticipantResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterParticipantResponse.Merge(m, src)
}
func (m *MsgRegisterParticipantResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterParticipantResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterParticipantResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterParticipantResponse proto.InternalMessageInfo

type MsgCreateTeam struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *MsgCreateTeam) Reset()         { *m = MsgCreateTeam{} }
func (m *MsgCreateTeam) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTeam) ProtoMessage()    {}
func (*MsgCreateTeam) Descriptor() ([]byte, []int) {
	return fileDescriptor_13deadb02d6524bf, []int{2}
}
func (m *MsgCreateTeam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTeam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTeam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTeam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTeam.Merge(m, src)
}
func (m *MsgCreateTeam) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTeam) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTeam.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTeam proto.InternalMessageInfo

func (m *MsgCreateTeam) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTeam) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MsgCreateTeamResponse struct {
}

func (m *MsgCreateTeamResponse) Reset()         { *m = MsgCreateTeamResponse{} }
func (m *MsgCreateTeamResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTeamResponse) ProtoMessage()    {}
func (*MsgCreateTeamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13deadb02d6524bf, []int{3}
}
func (m *MsgCreateTeamResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTeamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTeamResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTeamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTeamResponse.Merge(m, src)
}
func (m *MsgCreateTeamResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTeamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTeamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTeamResponse proto.InternalMessageInfo

type MsgSetTeamManager struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Team    string `protobuf:"bytes,2,opt,name=team,proto3" json:"team,omitempty"`
	Manager string `protobuf:"bytes,3,opt,name=manager,proto3" json:"manager,omitempty"`
}

func (m *MsgSetTeamManager) Reset()         { *m = MsgSetTeamManager{} }
func (m *MsgSetTeamManager) String() string { return proto.CompactTextString(m) }
func (*MsgSetTeamManager) ProtoMessage()    {}
func (*MsgSetTeamManager) Descriptor() ([]byte, []int) {
	return fileDescriptor_13deadb02d6524bf, []int{4}
}
func (m *MsgSetTeamManager) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetTeamManager) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetTeamManager.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetTeamManager) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetTeamManager.Merge(m, src)
}
func (m *MsgSetTeamManager) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetTeamManager) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetTeamManager.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetTeamManager proto.InternalMessageInfo

func (m *MsgSetTeamManager) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetTeamManager) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *MsgSetTeamManager) GetManager() string {
	if m != nil {
		return m.Manager
	}
	return ""
}

type MsgSetTeamManagerResponse struct {
}

func (m *MsgSetTeamManagerResponse) Reset()         { *m = MsgSetTeamManagerResponse{} }
func (m *MsgSetTeamManagerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetTeamManagerResponse) ProtoMessage()    {}
func (*MsgSetTeamManagerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13deadb02d6524bf, []int{5}
}
func (m *MsgSetTeamManagerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetTeamManagerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetTeamManagerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetTeamManagerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetTeamManagerResponse.Merge(m, src)
}
func (m *MsgSetTeamManagerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetTeamManagerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetTeamManagerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetTeamManagerResponse proto.InternalMessageInfo

type MsgSetTeamTrainer struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Team    string `protobuf:"bytes,2,opt,name=team,proto3" json:"team,omitempty"`
	Trainer string `protobuf:"bytes,3,opt,name=trainer,proto3" json:"trainer,omitempty"`
}

func (m *MsgSetTeamTrainer) Reset()         { *m = MsgSetTeamTrainer{} }
func (m *MsgSetTeamTrainer) String() string { return proto.CompactTextString(m) }
func (*MsgSetTeamTrainer) ProtoMessage()    {}
func (*MsgSetTeamTrainer) Descriptor() ([]byte, []int) {
	return fileDescriptor_13deadb02d6524bf, []int{6}
}
func (m *MsgSetTeamTrainer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetTeamTrainer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetTeamTrainer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetTeamTrainer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetTeamTrainer.Merge(m, src)
}
func (m *MsgSetTeamTrainer) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetTeamTrainer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetTeamTrainer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetTeamTrainer proto.InternalMessageInfo

func (m *MsgSetTeamTrainer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetTeamTrainer) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *MsgSetTeamTrainer) GetTrainer() string {
	if m != nil {
		return m.Trainer
	}
	return ""
}

type MsgSetTeamTrainerResponse struct {
}

func (m *MsgSetTeamTrainerResponse) Reset()         { *m = MsgSetTeamTrainerResponse{} }
func (m *MsgSetTeamTrainerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetTeamTrainerResponse) ProtoMessage()    {}
func (*MsgSetTeamTrainerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13deadb02d6524bf, []int{7}
}
func (m *MsgSetTeamTrainerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetTeamTrainerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetTeamTrainerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetTeamTrainerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetTeamTrainerResponse.Merge(m, src)
}
func (m *MsgSetTeamTrainerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetTeamTrainerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetTeamTrainerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetTeamTrainerResponse proto.InternalMessageInfo

type MsgRequestJoinTeam struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Team    string `protobuf:"bytes,2,opt,name=team,proto3" json:"team,omitempty"`
}

func (m *MsgRequestJoinTeam) Reset()         { *m = MsgRequestJoinTeam{} }
func (m *MsgRequestJoinTeam) String() string { return proto.CompactTextString(m) }
func (*MsgRequestJoinTeam) ProtoMessage()    {}
func (*MsgRequestJoinTeam) Descriptor() ([]byte, []int) {
	return fileDescriptor_13deadb02d6524bf, []int{8}
}
func (m *MsgRequestJoinTeam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRequestJoinTeam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRequestJoinTeam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRequestJoinTeam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRequestJoinTeam.Merge(m, src)
}
func (m *MsgRequestJoinTeam) XXX_Size() int {
	return m.Size()
}
func (m *MsgRequestJoinTeam) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRequestJoinTeam.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRequestJoinTeam proto.InternalMessageInfo

func (m *MsgRequestJoinTeam) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRequestJoinTeam) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

type MsgRequestJoinTeamResponse struct {
}

func (m *MsgRequestJoinTeamResponse) Reset()         { *m = MsgRequestJoinTeamResponse{} }
func (m *MsgRequestJoinTeamResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRequestJoinTeamResponse) ProtoMessage()    {}
func (*MsgRequestJoinTeamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13deadb02d6524bf, []int{9}
}
func (m *MsgRequestJoinTeamResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRequestJoinTeamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRequestJoinTeamResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRequestJoinTeamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRequestJoinTeamResponse.Merge(m, src)
}
func (m *MsgRequestJoinTeamResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRequestJoinTeamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRequestJoinTeamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRequestJoinTeamResponse proto.InternalMessageInfo

type MsgManageJoinTeamRequest struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Team        string `protobuf:"bytes,2,opt,name=team,proto3" json:"team,omitempty"`
	Participant string `protobuf:"bytes,3,opt,name=participant,proto3" json:"participant,omitempty"`
	Accept      bool   `protobuf:"varint,4,opt,name=accept,proto3" json:"accept,omitempty"`
}

func (m *MsgManageJoinTeamRequest) Reset()         { *m = MsgManageJoinTeamRequest{} }
func (m *MsgManageJoinTeamRequest) String() string { return proto.CompactTextString(m) }
func (*MsgManageJoinTeamRequest) ProtoMessage()    {}
func (*MsgManageJoinTeamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_13deadb02d6524bf, []int{10}
}
func (m *MsgManageJoinTeamRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgManageJoinTeamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgManageJoinTeamRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgManageJoinTeamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgManageJoinTeamRequest.Merge(m, src)
}
func (m *MsgManageJoinTeamRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgManageJoinTeamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgManageJoinTeamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgManageJoinTeamRequest proto.InternalMessageInfo

func (m *MsgManageJoinTeamRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgManageJoinTeamRequest) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *MsgManageJoinTeamRequest) GetParticipant() string {
	if m != nil {
		return m.Participant
	}
	return ""
}

func (m *MsgManageJoinTeamRequest) GetAccept() bool {
	if m != nil {
		return m.Accept
	}
	return false
}

type MsgManageJoinTeamRequestResponse struct {
	Team *Team `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
}

func (m *MsgManageJoinTeamRequestResponse) Reset()         { *m = MsgManageJoinTeamRequestResponse{} }
func (m *MsgManageJoinTeamRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgManageJoinTeamRequestResponse) ProtoMessage()    {}
func (*MsgManageJoinTeamRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13deadb02d6524bf, []int{11}
}
func (m *MsgManageJoinTeamRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgManageJoinTeamRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgManageJoinTeamRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgManageJoinTeamRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgManageJoinTeamRequestResponse.Merge(m, src)
}
func (m *MsgManageJoinTeamRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgManageJoinTeamRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgManageJoinTeamRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgManageJoinTeamRequestResponse proto.InternalMessageInfo

func (m *MsgManageJoinTeamRequestResponse) GetTeam() *Team {
	if m != nil {
		return m.Team
	}
	return nil
}

type MsgInviteParticipantToJoinTeam struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Team        string `protobuf:"bytes,2,opt,name=team,proto3" json:"team,omitempty"`
	Participant string `protobuf:"bytes,3,opt,name=participant,proto3" json:"participant,omitempty"`
}

func (m *MsgInviteParticipantToJoinTeam) Reset()         { *m = MsgInviteParticipantToJoinTeam{} }
func (m *MsgInviteParticipantToJoinTeam) String() string { return proto.CompactTextString(m) }
func (*MsgInviteParticipantToJoinTeam) ProtoMessage()    {}
func (*MsgInviteParticipantToJoinTeam) Descriptor() ([]byte, []int) {
	return fileDescriptor_13deadb02d6524bf, []int{12}
}
func (m *MsgInviteParticipantToJoinTeam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInviteParticipantToJoinTeam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInviteParticipantToJoinTeam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInviteParticipantToJoinTeam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInviteParticipantToJoinTeam.Merge(m, src)
}
func (m *MsgInviteParticipantToJoinTeam) XXX_Size() int {
	return m.Size()
}
func (m *MsgInviteParticipantToJoinTeam) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInviteParticipantToJoinTeam.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInviteParticipantToJoinTeam proto.InternalMessageInfo

func (m *MsgInviteParticipantToJoinTeam) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgInviteParticipantToJoinTeam) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *MsgInviteParticipantToJoinTeam) GetParticipant() string {
	if m != nil {
		return m.Participant
	}
	return ""
}

type MsgInviteParticipantToJoinTeamResponse struct {
	Participant *Participant `protobuf:"bytes,1,opt,name=participant,proto3" json:"participant,omitempty"`
}

func (m *MsgInviteParticipantToJoinTeamResponse) Reset() {
	*m = MsgInviteParticipantToJoinTeamResponse{}
}
func (m *MsgInviteParticipantToJoinTeamResponse) String() string { return proto.CompactTextString(m) }
func (*MsgInviteParticipantToJoinTeamResponse) ProtoMessage()    {}
func (*MsgInviteParticipantToJoinTeamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13deadb02d6524bf, []int{13}
}
func (m *MsgInviteParticipantToJoinTeamResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInviteParticipantToJoinTeamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInviteParticipantToJoinTeamResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInviteParticipantToJoinTeamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInviteParticipantToJoinTeamResponse.Merge(m, src)
}
func (m *MsgInviteParticipantToJoinTeamResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgInviteParticipantToJoinTeamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInviteParticipantToJoinTeamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInviteParticipantToJoinTeamResponse proto.InternalMessageInfo

func (m *MsgInviteParticipantToJoinTeamResponse) GetParticipant() *Participant {
	if m != nil {
		return m.Participant
	}
	return nil
}

func init() {
	proto.RegisterType((*MsgRegisterParticipant)(nil), "internetofsports.blockchain.identity.MsgRegisterParticipant")
	proto.RegisterType((*MsgRegisterParticipantResponse)(nil), "internetofsports.blockchain.identity.MsgRegisterParticipantResponse")
	proto.RegisterType((*MsgCreateTeam)(nil), "internetofsports.blockchain.identity.MsgCreateTeam")
	proto.RegisterType((*MsgCreateTeamResponse)(nil), "internetofsports.blockchain.identity.MsgCreateTeamResponse")
	proto.RegisterType((*MsgSetTeamManager)(nil), "internetofsports.blockchain.identity.MsgSetTeamManager")
	proto.RegisterType((*MsgSetTeamManagerResponse)(nil), "internetofsports.blockchain.identity.MsgSetTeamManagerResponse")
	proto.RegisterType((*MsgSetTeamTrainer)(nil), "internetofsports.blockchain.identity.MsgSetTeamTrainer")
	proto.RegisterType((*MsgSetTeamTrainerResponse)(nil), "internetofsports.blockchain.identity.MsgSetTeamTrainerResponse")
	proto.RegisterType((*MsgRequestJoinTeam)(nil), "internetofsports.blockchain.identity.MsgRequestJoinTeam")
	proto.RegisterType((*MsgRequestJoinTeamResponse)(nil), "internetofsports.blockchain.identity.MsgRequestJoinTeamResponse")
	proto.RegisterType((*MsgManageJoinTeamRequest)(nil), "internetofsports.blockchain.identity.MsgManageJoinTeamRequest")
	proto.RegisterType((*MsgManageJoinTeamRequestResponse)(nil), "internetofsports.blockchain.identity.MsgManageJoinTeamRequestResponse")
	proto.RegisterType((*MsgInviteParticipantToJoinTeam)(nil), "internetofsports.blockchain.identity.MsgInviteParticipantToJoinTeam")
	proto.RegisterType((*MsgInviteParticipantToJoinTeamResponse)(nil), "internetofsports.blockchain.identity.MsgInviteParticipantToJoinTeamResponse")
}

func init() { proto.RegisterFile("blockchain/identity/tx.proto", fileDescriptor_13deadb02d6524bf) }

var fileDescriptor_13deadb02d6524bf = []byte{
	// 597 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x4f, 0x6b, 0xd4, 0x40,
	0x14, 0xef, 0xd8, 0x52, 0xd7, 0x57, 0x54, 0x8c, 0xb4, 0xc6, 0x69, 0x09, 0x21, 0xa8, 0x14, 0x0f,
	0x59, 0x6c, 0x0f, 0x15, 0xd4, 0x2a, 0x55, 0x84, 0x8a, 0xf1, 0xcf, 0xee, 0x9e, 0xf4, 0x34, 0x1b,
	0xa7, 0xe9, 0x50, 0x33, 0x13, 0x33, 0x53, 0x69, 0x0f, 0x7a, 0xf0, 0x28, 0x08, 0x5e, 0x3d, 0x89,
	0x1f, 0xc1, 0x6f, 0xe1, 0xb1, 0x47, 0x8f, 0xb2, 0xfb, 0x45, 0x64, 0xf3, 0x6f, 0x93, 0x6d, 0x4c,
	0xb3, 0xa9, 0xb7, 0x7d, 0x99, 0xf7, 0xfb, 0xf3, 0xde, 0xce, 0x7b, 0x0c, 0xac, 0xf4, 0xdf, 0x0a,
	0x77, 0xcf, 0xdd, 0x25, 0x8c, 0xb7, 0xd9, 0x1b, 0xca, 0x15, 0x53, 0x87, 0x6d, 0x75, 0x60, 0x07,
	0xa1, 0x50, 0x42, 0xbb, 0xc6, 0xb8, 0xa2, 0x21, 0xa7, 0x4a, 0xec, 0xc8, 0x40, 0x84, 0x4a, 0xda,
	0xe3, 0x74, 0x3b, 0x4d, 0xc7, 0x46, 0x29, 0x07, 0x25, 0x7e, 0xcc, 0x82, 0xaf, 0x97, 0x9d, 0x07,
	0x24, 0x54, 0xcc, 0x65, 0x01, 0xe1, 0x2a, 0x4e, 0xb3, 0x9e, 0xc1, 0x92, 0x23, 0xbd, 0x0e, 0xf5,
	0x98, 0x54, 0x34, 0x7c, 0x31, 0x3e, 0xd7, 0x74, 0x38, 0xeb, 0x86, 0x94, 0x28, 0x11, 0xea, 0xc8,
	0x44, 0xab, 0xe7, 0x3a, 0x69, 0xa8, 0x61, 0x68, 0x71, 0xe6, 0xee, 0x71, 0xe2, 0x53, 0xfd, 0x4c,
	0x74, 0x94, 0xc5, 0x96, 0x09, 0x46, 0x39, 0x5f, 0x87, 0xca, 0x40, 0x70, 0x49, 0xad, 0x7b, 0x70,
	0xde, 0x91, 0xde, 0xc3, 0x11, 0x17, 0xed, 0x51, 0xe2, 0x57, 0x08, 0x69, 0x30, 0x97, 0x13, 0x89,
	0x7e, 0x5b, 0x57, 0x60, 0xb1, 0x00, 0xcf, 0x78, 0x5f, 0xc3, 0x25, 0x47, 0x7a, 0x5d, 0xaa, 0x46,
	0x5f, 0x1d, 0xc2, 0x89, 0x47, 0xc3, 0x6a, 0xee, 0x51, 0xb7, 0x52, 0x6e, 0x95, 0x38, 0xf1, 0x63,
	0xa0, 0x3e, 0x1b, 0x67, 0x27, 0xa1, 0xb5, 0x0c, 0x57, 0x8f, 0x91, 0x97, 0x2b, 0xf7, 0x42, 0xc2,
	0x78, 0x13, 0x65, 0x15, 0x03, 0x53, 0xe5, 0x24, 0x2c, 0x2a, 0x27, 0xe4, 0x99, 0xf2, 0x16, 0x68,
	0x51, 0xb7, 0xdf, 0xed, 0x53, 0xa9, 0x9e, 0x08, 0xc6, 0x4f, 0x6e, 0xe8, 0xa4, 0xb4, 0xb5, 0x02,
	0xf8, 0x38, 0x47, 0xa6, 0xf0, 0x09, 0x81, 0xee, 0x48, 0x2f, 0x2e, 0x79, 0x7c, 0x1a, 0x25, 0x4f,
	0x59, 0xa3, 0x09, 0x0b, 0xb9, 0xfb, 0x97, 0xd4, 0x99, 0xff, 0xa4, 0x2d, 0xc1, 0x3c, 0x71, 0x5d,
	0x1a, 0x28, 0x7d, 0xce, 0x44, 0xab, 0xad, 0x4e, 0x12, 0x59, 0x7d, 0x30, 0xff, 0xe5, 0x21, 0x35,
	0xaa, 0x6d, 0x26, 0x8a, 0x23, 0x23, 0x0b, 0x6b, 0x37, 0xed, 0x3a, 0x43, 0x64, 0x47, 0x44, 0x71,
	0x1b, 0x82, 0xe8, 0xe2, 0x6e, 0xf3, 0xf7, 0x4c, 0xd1, 0xdc, 0xb5, 0xed, 0x89, 0x66, 0x6d, 0x3d,
	0xb9, 0x5a, 0xeb, 0x03, 0xdc, 0xa8, 0x56, 0xcc, 0x6a, 0xeb, 0x16, 0xb9, 0xe2, 0x12, 0x6f, 0xd5,
	0x2b, 0x31, 0x3f, 0x82, 0x79, 0x96, 0xb5, 0x1f, 0x2d, 0x98, 0x75, 0xa4, 0xa7, 0x7d, 0x43, 0x70,
	0xb9, 0x6c, 0xfe, 0xef, 0xd6, 0xe3, 0x2f, 0x9f, 0x76, 0xfc, 0xe8, 0x34, 0xe8, 0xac, 0xf0, 0x8f,
	0x00, 0xb9, 0x45, 0xb1, 0x5e, 0x9b, 0x73, 0x0c, 0xc2, 0x77, 0x1a, 0x80, 0x32, 0xfd, 0xcf, 0x08,
	0x2e, 0x4c, 0x6c, 0x94, 0x8d, 0xda, 0x7c, 0x45, 0x20, 0xbe, 0xdf, 0x10, 0x58, 0x66, 0x26, 0x5d,
	0x32, 0x53, 0x9b, 0x49, 0x80, 0xd3, 0x9b, 0x99, 0xd8, 0x3c, 0xda, 0x17, 0x04, 0x17, 0x27, 0xf7,
	0xce, 0xed, 0x29, 0xfe, 0xf3, 0x02, 0x12, 0x3f, 0x68, 0x8a, 0xcc, 0xfc, 0x7c, 0x47, 0xb0, 0x58,
	0xbe, 0xa4, 0x36, 0x6b, 0x73, 0x97, 0xe2, 0xf1, 0xe3, 0xd3, 0xe1, 0x33, 0x87, 0x3f, 0x11, 0x2c,
	0x57, 0xad, 0x97, 0xfa, 0x13, 0x53, 0xc1, 0x82, 0x9f, 0xfe, 0x0f, 0x96, 0xd4, 0xf3, 0xd6, 0xcb,
	0x5f, 0x03, 0x03, 0x1d, 0x0d, 0x0c, 0xf4, 0x67, 0x60, 0xa0, 0xaf, 0x43, 0x63, 0xe6, 0x68, 0x68,
	0xcc, 0xfc, 0x1e, 0x1a, 0x33, 0xaf, 0x36, 0x3c, 0xa6, 0x76, 0xf7, 0xfb, 0xb6, 0x2b, 0xfc, 0xf6,
	0x76, 0xa2, 0xf8, 0x7c, 0xa7, 0x1b, 0x29, 0xb6, 0x73, 0x4f, 0x8f, 0x83, 0xdc, 0xe3, 0xe4, 0x30,
	0xa0, 0xb2, 0x3f, 0x1f, 0xbd, 0x3b, 0xd6, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xd0, 0xdf, 0x3e,
	0xf1, 0x04, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	RegisterParticipant(ctx context.Context, in *MsgRegisterParticipant, opts ...grpc.CallOption) (*MsgRegisterParticipantResponse, error)
	CreateTeam(ctx context.Context, in *MsgCreateTeam, opts ...grpc.CallOption) (*MsgCreateTeamResponse, error)
	SetTeamManager(ctx context.Context, in *MsgSetTeamManager, opts ...grpc.CallOption) (*MsgSetTeamManagerResponse, error)
	SetTeamTrainer(ctx context.Context, in *MsgSetTeamTrainer, opts ...grpc.CallOption) (*MsgSetTeamTrainerResponse, error)
	RequestJoinTeam(ctx context.Context, in *MsgRequestJoinTeam, opts ...grpc.CallOption) (*MsgRequestJoinTeamResponse, error)
	ManageJoinTeamRequest(ctx context.Context, in *MsgManageJoinTeamRequest, opts ...grpc.CallOption) (*MsgManageJoinTeamRequestResponse, error)
	InviteParticipantToJoinTeam(ctx context.Context, in *MsgInviteParticipantToJoinTeam, opts ...grpc.CallOption) (*MsgInviteParticipantToJoinTeamResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) RegisterParticipant(ctx context.Context, in *MsgRegisterParticipant, opts ...grpc.CallOption) (*MsgRegisterParticipantResponse, error) {
	out := new(MsgRegisterParticipantResponse)
	err := c.cc.Invoke(ctx, "/internetofsports.blockchain.identity.Msg/RegisterParticipant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTeam(ctx context.Context, in *MsgCreateTeam, opts ...grpc.CallOption) (*MsgCreateTeamResponse, error) {
	out := new(MsgCreateTeamResponse)
	err := c.cc.Invoke(ctx, "/internetofsports.blockchain.identity.Msg/CreateTeam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetTeamManager(ctx context.Context, in *MsgSetTeamManager, opts ...grpc.CallOption) (*MsgSetTeamManagerResponse, error) {
	out := new(MsgSetTeamManagerResponse)
	err := c.cc.Invoke(ctx, "/internetofsports.blockchain.identity.Msg/SetTeamManager", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetTeamTrainer(ctx context.Context, in *MsgSetTeamTrainer, opts ...grpc.CallOption) (*MsgSetTeamTrainerResponse, error) {
	out := new(MsgSetTeamTrainerResponse)
	err := c.cc.Invoke(ctx, "/internetofsports.blockchain.identity.Msg/SetTeamTrainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RequestJoinTeam(ctx context.Context, in *MsgRequestJoinTeam, opts ...grpc.CallOption) (*MsgRequestJoinTeamResponse, error) {
	out := new(MsgRequestJoinTeamResponse)
	err := c.cc.Invoke(ctx, "/internetofsports.blockchain.identity.Msg/RequestJoinTeam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ManageJoinTeamRequest(ctx context.Context, in *MsgManageJoinTeamRequest, opts ...grpc.CallOption) (*MsgManageJoinTeamRequestResponse, error) {
	out := new(MsgManageJoinTeamRequestResponse)
	err := c.cc.Invoke(ctx, "/internetofsports.blockchain.identity.Msg/ManageJoinTeamRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) InviteParticipantToJoinTeam(ctx context.Context, in *MsgInviteParticipantToJoinTeam, opts ...grpc.CallOption) (*MsgInviteParticipantToJoinTeamResponse, error) {
	out := new(MsgInviteParticipantToJoinTeamResponse)
	err := c.cc.Invoke(ctx, "/internetofsports.blockchain.identity.Msg/InviteParticipantToJoinTeam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	RegisterParticipant(context.Context, *MsgRegisterParticipant) (*MsgRegisterParticipantResponse, error)
	CreateTeam(context.Context, *MsgCreateTeam) (*MsgCreateTeamResponse, error)
	SetTeamManager(context.Context, *MsgSetTeamManager) (*MsgSetTeamManagerResponse, error)
	SetTeamTrainer(context.Context, *MsgSetTeamTrainer) (*MsgSetTeamTrainerResponse, error)
	RequestJoinTeam(context.Context, *MsgRequestJoinTeam) (*MsgRequestJoinTeamResponse, error)
	ManageJoinTeamRequest(context.Context, *MsgManageJoinTeamRequest) (*MsgManageJoinTeamRequestResponse, error)
	InviteParticipantToJoinTeam(context.Context, *MsgInviteParticipantToJoinTeam) (*MsgInviteParticipantToJoinTeamResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) RegisterParticipant(ctx context.Context, req *MsgRegisterParticipant) (*MsgRegisterParticipantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterParticipant not implemented")
}
func (*UnimplementedMsgServer) CreateTeam(ctx context.Context, req *MsgCreateTeam) (*MsgCreateTeamResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTeam not implemented")
}
func (*UnimplementedMsgServer) SetTeamManager(ctx context.Context, req *MsgSetTeamManager) (*MsgSetTeamManagerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTeamManager not implemented")
}
func (*UnimplementedMsgServer) SetTeamTrainer(ctx context.Context, req *MsgSetTeamTrainer) (*MsgSetTeamTrainerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTeamTrainer not implemented")
}
func (*UnimplementedMsgServer) RequestJoinTeam(ctx context.Context, req *MsgRequestJoinTeam) (*MsgRequestJoinTeamResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestJoinTeam not implemented")
}
func (*UnimplementedMsgServer) ManageJoinTeamRequest(ctx context.Context, req *MsgManageJoinTeamRequest) (*MsgManageJoinTeamRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ManageJoinTeamRequest not implemented")
}
func (*UnimplementedMsgServer) InviteParticipantToJoinTeam(ctx context.Context, req *MsgInviteParticipantToJoinTeam) (*MsgInviteParticipantToJoinTeamResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InviteParticipantToJoinTeam not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_RegisterParticipant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterParticipant)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterParticipant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internetofsports.blockchain.identity.Msg/RegisterParticipant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterParticipant(ctx, req.(*MsgRegisterParticipant))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTeam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internetofsports.blockchain.identity.Msg/CreateTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTeam(ctx, req.(*MsgCreateTeam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetTeamManager_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetTeamManager)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetTeamManager(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internetofsports.blockchain.identity.Msg/SetTeamManager",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetTeamManager(ctx, req.(*MsgSetTeamManager))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetTeamTrainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetTeamTrainer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetTeamTrainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internetofsports.blockchain.identity.Msg/SetTeamTrainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetTeamTrainer(ctx, req.(*MsgSetTeamTrainer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RequestJoinTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRequestJoinTeam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RequestJoinTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internetofsports.blockchain.identity.Msg/RequestJoinTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RequestJoinTeam(ctx, req.(*MsgRequestJoinTeam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ManageJoinTeamRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgManageJoinTeamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ManageJoinTeamRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internetofsports.blockchain.identity.Msg/ManageJoinTeamRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ManageJoinTeamRequest(ctx, req.(*MsgManageJoinTeamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_InviteParticipantToJoinTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInviteParticipantToJoinTeam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InviteParticipantToJoinTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internetofsports.blockchain.identity.Msg/InviteParticipantToJoinTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InviteParticipantToJoinTeam(ctx, req.(*MsgInviteParticipantToJoinTeam))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "internetofsports.blockchain.identity.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterParticipant",
			Handler:    _Msg_RegisterParticipant_Handler,
		},
		{
			MethodName: "CreateTeam",
			Handler:    _Msg_CreateTeam_Handler,
		},
		{
			MethodName: "SetTeamManager",
			Handler:    _Msg_SetTeamManager_Handler,
		},
		{
			MethodName: "SetTeamTrainer",
			Handler:    _Msg_SetTeamTrainer_Handler,
		},
		{
			MethodName: "RequestJoinTeam",
			Handler:    _Msg_RequestJoinTeam_Handler,
		},
		{
			MethodName: "ManageJoinTeamRequest",
			Handler:    _Msg_ManageJoinTeamRequest_Handler,
		},
		{
			MethodName: "InviteParticipantToJoinTeam",
			Handler:    _Msg_InviteParticipantToJoinTeam_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "blockchain/identity/tx.proto",
}

func (m *MsgRegisterParticipant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterParticipant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterParticipant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Nickname) > 0 {
		i -= len(m.Nickname)
		copy(dAtA[i:], m.Nickname)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Nickname)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterParticipantResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterParticipantResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterParticipantResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateTeam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTeam) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTeam) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTeamResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTeamResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTeamResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetTeamManager) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetTeamManager) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetTeamManager) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Manager) > 0 {
		i -= len(m.Manager)
		copy(dAtA[i:], m.Manager)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Manager)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Team) > 0 {
		i -= len(m.Team)
		copy(dAtA[i:], m.Team)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Team)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetTeamManagerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetTeamManagerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetTeamManagerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetTeamTrainer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetTeamTrainer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetTeamTrainer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Trainer) > 0 {
		i -= len(m.Trainer)
		copy(dAtA[i:], m.Trainer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Trainer)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Team) > 0 {
		i -= len(m.Team)
		copy(dAtA[i:], m.Team)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Team)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetTeamTrainerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetTeamTrainerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetTeamTrainerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRequestJoinTeam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRequestJoinTeam) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRequestJoinTeam) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Team) > 0 {
		i -= len(m.Team)
		copy(dAtA[i:], m.Team)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Team)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRequestJoinTeamResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRequestJoinTeamResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRequestJoinTeamResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgManageJoinTeamRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgManageJoinTeamRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgManageJoinTeamRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Accept {
		i--
		if m.Accept {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.Participant) > 0 {
		i -= len(m.Participant)
		copy(dAtA[i:], m.Participant)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Participant)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Team) > 0 {
		i -= len(m.Team)
		copy(dAtA[i:], m.Team)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Team)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgManageJoinTeamRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgManageJoinTeamRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgManageJoinTeamRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Team != nil {
		{
			size, err := m.Team.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInviteParticipantToJoinTeam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInviteParticipantToJoinTeam) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInviteParticipantToJoinTeam) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Participant) > 0 {
		i -= len(m.Participant)
		copy(dAtA[i:], m.Participant)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Participant)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Team) > 0 {
		i -= len(m.Team)
		copy(dAtA[i:], m.Team)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Team)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInviteParticipantToJoinTeamResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInviteParticipantToJoinTeamResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInviteParticipantToJoinTeamResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Participant != nil {
		{
			size, err := m.Participant.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgRegisterParticipant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Nickname)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterParticipantResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateTeam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTeamResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetTeamManager) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Team)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Manager)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetTeamManagerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetTeamTrainer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Team)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Trainer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetTeamTrainerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRequestJoinTeam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Team)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRequestJoinTeamResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgManageJoinTeamRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Team)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Participant)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Accept {
		n += 2
	}
	return n
}

func (m *MsgManageJoinTeamRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Team != nil {
		l = m.Team.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgInviteParticipantToJoinTeam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Team)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Participant)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgInviteParticipantToJoinTeamResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Participant != nil {
		l = m.Participant.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgRegisterParticipant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterParticipant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterParticipant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nickname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterParticipantResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterParticipantResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterParticipantResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTeam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTeam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTeam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTeamResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTeamResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTeamResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetTeamManager) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetTeamManager: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetTeamManager: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Team", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Team = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Manager", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Manager = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetTeamManagerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetTeamManagerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetTeamManagerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetTeamTrainer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetTeamTrainer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetTeamTrainer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Team", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Team = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Trainer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Trainer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetTeamTrainerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetTeamTrainerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetTeamTrainerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRequestJoinTeam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRequestJoinTeam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRequestJoinTeam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Team", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Team = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRequestJoinTeamResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRequestJoinTeamResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRequestJoinTeamResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgManageJoinTeamRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgManageJoinTeamRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgManageJoinTeamRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Team", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Team = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Participant", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Participant = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Accept", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Accept = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgManageJoinTeamRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgManageJoinTeamRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgManageJoinTeamRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Team", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Team == nil {
				m.Team = &Team{}
			}
			if err := m.Team.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInviteParticipantToJoinTeam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInviteParticipantToJoinTeam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInviteParticipantToJoinTeam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Team", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Team = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Participant", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Participant = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInviteParticipantToJoinTeamResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInviteParticipantToJoinTeamResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInviteParticipantToJoinTeamResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Participant", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Participant == nil {
				m.Participant = &Participant{}
			}
			if err := m.Participant.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
